--search and retrieval procedures

DELIMITER //
CREATE PROCEDURE SearchSongsByArtistName(
    IN ArtistName VARCHAR(100)
)
BEGIN
    SELECT s.Song_ID, s.Song_name, a.Album_Name, s.Genre, s.Duration
    FROM Song s
    INNER JOIN Album a ON s.Album_ID = a.Album_ID
    INNER JOIN AlbArt_ref aa ON s.Song_ID = aa.Song_ID
    INNER JOIN Artist ar ON aa.Artist_ID = ar.Artist_ID
    WHERE ar.Artist_Name = ArtistName;
END//
DELIMITER ;
CALL SearchSongsByArtistName("KJ Yesudas");

DELIMITER //

CREATE PROCEDURE SearchSongsByGenre(
    IN GenreName VARCHAR(50)
)
BEGIN
    SELECT s.Song_ID, s.Song_name, a.Album_Name, s.Genre, s.Duration
    FROM Song s
    INNER JOIN Album a ON s.Album_ID = a.Album_ID
    WHERE s.Genre = GenreName;
END//

DELIMITER ;

CALL SearchSongsByGenre("R&B/Soul");

DELIMITER //
CREATE PROCEDURE SearchSongsByAlbumName(
    IN AlbumName VARCHAR(100)
)
BEGIN
    SELECT s.Song_ID, s.Song_name, s.Genre, s.Duration FROM Song s 
    INNER JOIN Album a ON s.Album_ID = a.Album_ID
    WHERE a.Album_Name = AlbumName;
END//

DELIMITER ;

CALL SearchSongsByAlbumName("Freudian");


-- Delete Song

DELIMITER //

CREATE PROCEDURE DeleteSong(
    IN SongID INT
)
BEGIN
    DELETE FROM Song
    WHERE Song_ID = SongID;
END//

DELIMITER ;


-- Add
DELIMITER //

CREATE PROCEDURE AddArtist(
    IN ArtistID INT,
    IN ArtistName VARCHAR(25)
)
BEGIN
    INSERT INTO Artist(Artist_ID, Artist_Name)
    VALUES (ArtistID, ArtistName);
END//

DELIMITER ;

DELIMITER //

CREATE PROCEDURE AddAlbum(
    IN AlbumID INT,
    IN AlbumName VARCHAR(100),
    IN ReleaseYear INT
)
BEGIN
    INSERT INTO Album(Album_ID, Album_Name, Year)
    VALUES (AlbumID, AlbumName, ReleaseYear);
END//

DELIMITER ;




DROP procedure IF EXISTS InsertNewSong;

DELIMITER $$

CREATE DEFINER=root@localhost PROCEDURE InsertNewSong(
    IN SongID INT,
    IN ArtistID INT,
    IN SongName VARCHAR(50),
    IN AlbumName VARCHAR(100),
    IN Genre VARCHAR(50),
    IN Duration VARCHAR(10)
)
BEGIN
    DECLARE AlbumID INT;
    DECLARE ArtistID_Check INT;
 
    SELECT Album_ID INTO AlbumID
    FROM Album
    WHERE Album_Name = AlbumName;

    SELECT Artist_ID INTO ArtistID_Check
    FROM Artist
    WHERE Artist_ID = ArtistID;

    IF AlbumID IS NULL THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Album does not exist';

    ELSE

        IF ArtistID_Check IS NULL THEN
            SIGNAL SQLSTATE '46000'
            SET MESSAGE_TEXT = 'Artist does not exist';

        ELSE
	    INSERT INTO Song(Song_ID, Song_name, Album_ID, Genre, Duration)
	    VALUES (SongID, SongName, AlbumID, Genre, Duration);
    
	    INSERT INTO AlbArt_ref(Artist_ID, Album_ID, Song_ID)
	    VALUES (ArtistID_Check, AlbumID, SongID);

        END IF;
    END IF;

END$$

DELIMITERÂ ;
